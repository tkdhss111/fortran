var tipuesearch = {"pages":[{"title":" Fortran Program ","text":"Fortran Program Note You can include any notes (or bugs, warnings, or todos) like so. Bug You can have multi-paragraph versions of these too! That means you can\ninclude ordered lists unordered lists images etc. Developer Info Hisashi Takeda Ph.D. Applied Statistician","tags":"home","loc":"index.html"},{"title":"excel_mo.f90 – Fortran Program","text":"Contents Modules excel_mo Source Code excel_mo.f90 Source Code module excel_mo use , intrinsic :: iso_c_binding implicit none type , bind ( c ) :: datetime_ty integer ( c_int ) :: year integer ( c_int ) :: month integer ( c_int ) :: day integer ( c_int ) :: hour integer ( c_int ) :: min real ( c_double ) :: sec end type interface subroutine workbook_new ( workbook , file ) & bind ( c , name = 'workbook_new_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: workbook character ( c_char ), intent ( in ) :: file end subroutine subroutine workbook_add_worksheet ( workbook , worksheet , name ) & bind ( c , name = 'workbook_add_worksheet_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: workbook , worksheet character ( c_char ), intent ( in ) :: name end subroutine subroutine workbook_add_format ( workbook , format ) & bind ( c , name = 'workbook_add_format_c' ) import c_ptr type ( c_ptr ), intent ( in ) :: workbook , format end subroutine subroutine workbook_define_name ( workbook , name , formula ) & bind ( c , name = 'workbook_define_name_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: workbook character ( c_char ), intent ( in ) :: name , formula end subroutine subroutine worksheet_write_datetime ( workbook , row , col , datetime , format ) & bind ( c , name = 'worksheet_write_datetime_c' ) import c_ptr , c_int , c_char , datetime_ty type ( c_ptr ), intent ( in ) :: workbook , format integer ( c_int ), intent ( in ), value :: row , col type ( datetime_ty ), intent ( in ) :: datetime end subroutine subroutine format_set_shrink ( format ) & bind ( c , name = 'format_set_shrink_c' ) import c_ptr type ( c_ptr ), intent ( in ) :: format end subroutine subroutine format_set_bold ( format ) & bind ( c , name = 'format_set_bold_c' ) import c_ptr type ( c_ptr ), intent ( in ) :: format end subroutine subroutine format_set_italic ( format ) & bind ( c , name = 'format_set_italic_c' ) import c_ptr type ( c_ptr ), intent ( in ) :: format end subroutine subroutine worksheet_autofilter ( worksheet , first_row , first_col , last_row , last_col ) & bind ( c , name = 'worksheet_autofilter_c' ) import c_ptr , c_int type ( c_ptr ), intent ( in ) :: worksheet integer ( c_int ), intent ( in ), value :: first_row , first_col , last_row , last_col end subroutine subroutine worksheet_set_row ( worksheet , format , row , height ) & bind ( c , name = 'worksheet_set_row_c' ) import c_ptr , c_int type ( c_ptr ), intent ( in ) :: worksheet , format integer ( c_int ), intent ( in ), value :: row integer ( c_int ), intent ( in ), value :: height end subroutine subroutine worksheet_set_column ( worksheet , format , col , width ) & bind ( c , name = 'worksheet_set_column_c' ) import c_ptr , c_int type ( c_ptr ), intent ( in ) :: worksheet , format integer ( c_int ), intent ( in ), value :: col integer ( c_int ), intent ( in ), value :: width end subroutine subroutine worksheet_write_formula ( worksheet , row , col , formula , format ) & bind ( c , name = 'worksheet_write_formula_c' ) import c_ptr , c_int , c_char type ( c_ptr ), intent ( in ) :: worksheet , format integer ( c_int ), intent ( in ), value :: row , col character ( c_char ), intent ( in ) :: formula end subroutine subroutine worksheet_write_number ( worksheet , format , row , col , value ) & bind ( c , name = 'worksheet_write_number_c' ) import c_ptr , c_int , c_double type ( c_ptr ), intent ( in ) :: worksheet , format integer ( c_int ), intent ( in ), value :: row , col real ( c_double ), intent ( in ), value :: value end subroutine subroutine worksheet_write_string ( worksheet , format , row , col , text ) & bind ( c , name = 'worksheet_write_string_c' ) import c_ptr , c_int , c_char type ( c_ptr ), intent ( in ) :: worksheet , format integer ( c_int ), intent ( in ), value :: row , col character ( c_char ), intent ( in ) :: text end subroutine subroutine worksheet_insert_image ( worksheet , row , col , file ) & bind ( c , name = 'worksheet_insert_image_c' ) import c_ptr , c_int , c_char type ( c_ptr ), intent ( in ) :: worksheet integer ( c_int ), intent ( in ), value :: row , col character ( c_char ), intent ( in ) :: file end subroutine subroutine workbook_close ( workbook ) & bind ( c , name = 'workbook_close_c' ) import c_ptr type ( c_ptr ), intent ( in ) :: workbook end subroutine ! URL subroutine worksheet_write_url ( worksheet , row , col , url , format ) & bind ( c , name = 'worksheet_write_url_c' ) import c_ptr , c_int , c_char type ( c_ptr ), intent ( in ) :: worksheet , format integer ( c_int ), intent ( in ), value :: row , col character ( c_char ), intent ( in ) :: url end subroutine ! Font size subroutine format_set_font_size ( format , size ) & bind ( c , name = 'format_set_font_size_c' ) import c_ptr , c_int type ( c_ptr ), intent ( in ) :: format integer ( c_int ), intent ( in ), value :: size end subroutine ! Font name subroutine format_set_font_name ( format , name ) & bind ( c , name = 'format_set_font_name_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: name end subroutine ! Number format subroutine format_set_num_format ( format , style ) & bind ( c , name = 'format_set_num_format_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: style end subroutine ! Tab color subroutine worksheet_set_tab_color ( worksheet , color ) & bind ( c , name = 'worksheet_set_tab_color_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: worksheet character ( c_char ), intent ( in ) :: color end subroutine ! Font color subroutine format_set_font_color ( format , color ) & bind ( c , name = 'format_set_font_color_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: color end subroutine ! Underline subroutine format_set_underline ( format , style ) & bind ( c , name = 'format_set_underline_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: style end subroutine ! Pattern subroutine format_set_pattern ( format , pattern ) & bind ( c , name = 'format_set_pattern_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: pattern end subroutine ! Background color subroutine format_set_bg_color ( format , color ) & bind ( c , name = 'format_set_bg_color_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: color end subroutine ! Alignment subroutine format_set_align ( format , align ) & bind ( c , name = 'format_set_align_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: align end subroutine ! Border subroutine format_set_border ( format , style ) & bind ( c , name = 'format_set_border_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: style end subroutine subroutine format_set_top ( format , style ) & bind ( c , name = 'format_set_top_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: style end subroutine subroutine format_set_bottom ( format , style ) & bind ( c , name = 'format_set_bottom_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: style end subroutine subroutine format_set_right ( format , style ) & bind ( c , name = 'format_set_right_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: style end subroutine subroutine format_set_left ( format , style ) & bind ( c , name = 'format_set_left_c' ) import c_ptr , c_char type ( c_ptr ), intent ( in ) :: format character ( c_char ), intent ( in ) :: style end subroutine end interface contains function cs ( fs ) result ( fsnull ) character ( * ), intent ( in ) :: fs character (:), allocatable :: fsnull fsnull = trim ( fs ) // c_null_char end function end module","tags":"","loc":"sourcefile/excel_mo.f90.html"},{"title":"datetime_ty – Fortran Program ","text":"type, public, bind(c) :: datetime_ty Contents Variables year month day hour min sec Components Type Visibility Attributes Name Initial integer(kind=c_int), public :: year integer(kind=c_int), public :: month integer(kind=c_int), public :: day integer(kind=c_int), public :: hour integer(kind=c_int), public :: min real(kind=c_double), public :: sec","tags":"","loc":"type/datetime_ty.html"},{"title":"cs – Fortran Program","text":"public function cs(fs) result(fsnull) Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: fs Return Value character(len=:),\n  allocatable Contents None","tags":"","loc":"proc/cs.html"},{"title":"workbook_new – Fortran Program","text":"interface public subroutine workbook_new(workbook, file) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook character(len=c_char), intent(in) :: file","tags":"","loc":"interface/workbook_new.html"},{"title":"workbook_add_worksheet – Fortran Program","text":"interface public subroutine workbook_add_worksheet(workbook, worksheet, name) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook type(c_ptr), intent(in) :: worksheet character(len=c_char), intent(in) :: name","tags":"","loc":"interface/workbook_add_worksheet.html"},{"title":"workbook_add_format – Fortran Program","text":"interface public subroutine workbook_add_format(workbook, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook type(c_ptr), intent(in) :: format","tags":"","loc":"interface/workbook_add_format.html"},{"title":"workbook_define_name – Fortran Program","text":"interface public subroutine workbook_define_name(workbook, name, formula) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook character(len=c_char), intent(in) :: name character(len=c_char), intent(in) :: formula","tags":"","loc":"interface/workbook_define_name.html"},{"title":"worksheet_write_datetime – Fortran Program","text":"interface public subroutine worksheet_write_datetime(workbook, row, col, datetime, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col type( datetime_ty ), intent(in) :: datetime type(c_ptr), intent(in) :: format","tags":"","loc":"interface/worksheet_write_datetime.html"},{"title":"format_set_shrink – Fortran Program","text":"interface public subroutine format_set_shrink(format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format","tags":"","loc":"interface/format_set_shrink.html"},{"title":"format_set_bold – Fortran Program","text":"interface public subroutine format_set_bold(format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format","tags":"","loc":"interface/format_set_bold.html"},{"title":"format_set_italic – Fortran Program","text":"interface public subroutine format_set_italic(format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format","tags":"","loc":"interface/format_set_italic.html"},{"title":"worksheet_autofilter – Fortran Program","text":"interface public subroutine worksheet_autofilter(worksheet, first_row, first_col, last_row, last_col) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: first_row integer(kind=c_int), intent(in), value :: first_col integer(kind=c_int), intent(in), value :: last_row integer(kind=c_int), intent(in), value :: last_col","tags":"","loc":"interface/worksheet_autofilter.html"},{"title":"worksheet_set_row – Fortran Program","text":"interface public subroutine worksheet_set_row(worksheet, format, row, height) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: height","tags":"","loc":"interface/worksheet_set_row.html"},{"title":"worksheet_set_column – Fortran Program","text":"interface public subroutine worksheet_set_column(worksheet, format, col, width) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: col integer(kind=c_int), intent(in), value :: width","tags":"","loc":"interface/worksheet_set_column.html"},{"title":"worksheet_write_formula – Fortran Program","text":"interface public subroutine worksheet_write_formula(worksheet, row, col, formula, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: formula type(c_ptr), intent(in) :: format","tags":"","loc":"interface/worksheet_write_formula.html"},{"title":"worksheet_write_number – Fortran Program","text":"interface public subroutine worksheet_write_number(worksheet, format, row, col, value) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col real(kind=c_double), intent(in), value :: value","tags":"","loc":"interface/worksheet_write_number.html"},{"title":"worksheet_write_string – Fortran Program","text":"interface public subroutine worksheet_write_string(worksheet, format, row, col, text) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: text","tags":"","loc":"interface/worksheet_write_string.html"},{"title":"worksheet_insert_image – Fortran Program","text":"interface public subroutine worksheet_insert_image(worksheet, row, col, file) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: file","tags":"","loc":"interface/worksheet_insert_image.html"},{"title":"workbook_close – Fortran Program","text":"interface public subroutine workbook_close(workbook) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook","tags":"","loc":"interface/workbook_close.html"},{"title":"worksheet_write_url – Fortran Program","text":"interface public subroutine worksheet_write_url(worksheet, row, col, url, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: url type(c_ptr), intent(in) :: format","tags":"","loc":"interface/worksheet_write_url.html"},{"title":"format_set_font_size – Fortran Program","text":"interface public subroutine format_set_font_size(format, size) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: size","tags":"","loc":"interface/format_set_font_size.html"},{"title":"format_set_font_name – Fortran Program","text":"interface public subroutine format_set_font_name(format, name) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: name","tags":"","loc":"interface/format_set_font_name.html"},{"title":"format_set_num_format – Fortran Program","text":"interface public subroutine format_set_num_format(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style","tags":"","loc":"interface/format_set_num_format.html"},{"title":"worksheet_set_tab_color – Fortran Program","text":"interface public subroutine worksheet_set_tab_color(worksheet, color) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet character(len=c_char), intent(in) :: color","tags":"","loc":"interface/worksheet_set_tab_color.html"},{"title":"format_set_font_color – Fortran Program","text":"interface public subroutine format_set_font_color(format, color) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: color","tags":"","loc":"interface/format_set_font_color.html"},{"title":"format_set_underline – Fortran Program","text":"interface public subroutine format_set_underline(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style","tags":"","loc":"interface/format_set_underline.html"},{"title":"format_set_pattern – Fortran Program","text":"interface public subroutine format_set_pattern(format, pattern) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: pattern","tags":"","loc":"interface/format_set_pattern.html"},{"title":"format_set_bg_color – Fortran Program","text":"interface public subroutine format_set_bg_color(format, color) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: color","tags":"","loc":"interface/format_set_bg_color.html"},{"title":"format_set_align – Fortran Program","text":"interface public subroutine format_set_align(format, align) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: align","tags":"","loc":"interface/format_set_align.html"},{"title":"format_set_border – Fortran Program","text":"interface public subroutine format_set_border(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style","tags":"","loc":"interface/format_set_border.html"},{"title":"format_set_top – Fortran Program","text":"interface public subroutine format_set_top(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style","tags":"","loc":"interface/format_set_top.html"},{"title":"format_set_bottom – Fortran Program","text":"interface public subroutine format_set_bottom(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style","tags":"","loc":"interface/format_set_bottom.html"},{"title":"format_set_right – Fortran Program","text":"interface public subroutine format_set_right(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style","tags":"","loc":"interface/format_set_right.html"},{"title":"format_set_left – Fortran Program","text":"interface public subroutine format_set_left(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style","tags":"","loc":"interface/format_set_left.html"},{"title":"excel_mo – Fortran Program","text":"Uses iso_c_binding module~~excel_mo~~UsesGraph module~excel_mo excel_mo iso_c_binding iso_c_binding module~excel_mo->iso_c_binding Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\n    descended from. Dashed arrows point from a module or program unit to \n    modules which it uses. Contents Interfaces workbook_new workbook_add_worksheet workbook_add_format workbook_define_name worksheet_write_datetime format_set_shrink format_set_bold format_set_italic worksheet_autofilter worksheet_set_row worksheet_set_column worksheet_write_formula worksheet_write_number worksheet_write_string worksheet_insert_image workbook_close worksheet_write_url format_set_font_size format_set_font_name format_set_num_format worksheet_set_tab_color format_set_font_color format_set_underline format_set_pattern format_set_bg_color format_set_align format_set_border format_set_top format_set_bottom format_set_right format_set_left Derived Types datetime_ty Functions cs Interfaces interface public subroutine workbook_new(workbook, file) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook character(len=c_char), intent(in) :: file interface public subroutine workbook_add_worksheet(workbook, worksheet, name) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook type(c_ptr), intent(in) :: worksheet character(len=c_char), intent(in) :: name interface public subroutine workbook_add_format(workbook, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook type(c_ptr), intent(in) :: format interface public subroutine workbook_define_name(workbook, name, formula) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook character(len=c_char), intent(in) :: name character(len=c_char), intent(in) :: formula interface public subroutine worksheet_write_datetime(workbook, row, col, datetime, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col type( datetime_ty ), intent(in) :: datetime type(c_ptr), intent(in) :: format interface public subroutine format_set_shrink(format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format interface public subroutine format_set_bold(format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format interface public subroutine format_set_italic(format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format interface public subroutine worksheet_autofilter(worksheet, first_row, first_col, last_row, last_col) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: first_row integer(kind=c_int), intent(in), value :: first_col integer(kind=c_int), intent(in), value :: last_row integer(kind=c_int), intent(in), value :: last_col interface public subroutine worksheet_set_row(worksheet, format, row, height) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: height interface public subroutine worksheet_set_column(worksheet, format, col, width) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: col integer(kind=c_int), intent(in), value :: width interface public subroutine worksheet_write_formula(worksheet, row, col, formula, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: formula type(c_ptr), intent(in) :: format interface public subroutine worksheet_write_number(worksheet, format, row, col, value) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col real(kind=c_double), intent(in), value :: value interface public subroutine worksheet_write_string(worksheet, format, row, col, text) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: text interface public subroutine worksheet_insert_image(worksheet, row, col, file) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: file interface public subroutine workbook_close(workbook) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: workbook interface public subroutine worksheet_write_url(worksheet, row, col, url, format) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet integer(kind=c_int), intent(in), value :: row integer(kind=c_int), intent(in), value :: col character(len=c_char), intent(in) :: url type(c_ptr), intent(in) :: format interface public subroutine format_set_font_size(format, size) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format integer(kind=c_int), intent(in), value :: size interface public subroutine format_set_font_name(format, name) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: name interface public subroutine format_set_num_format(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style interface public subroutine worksheet_set_tab_color(worksheet, color) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: worksheet character(len=c_char), intent(in) :: color interface public subroutine format_set_font_color(format, color) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: color interface public subroutine format_set_underline(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style interface public subroutine format_set_pattern(format, pattern) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: pattern interface public subroutine format_set_bg_color(format, color) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: color interface public subroutine format_set_align(format, align) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: align interface public subroutine format_set_border(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style interface public subroutine format_set_top(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style interface public subroutine format_set_bottom(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style interface public subroutine format_set_right(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style interface public subroutine format_set_left(format, style) bind(c, name = \"0\" ) Arguments Type Intent Optional Attributes Name type(c_ptr), intent(in) :: format character(len=c_char), intent(in) :: style Derived Types type, public, bind(c) :: datetime_ty Components Type Visibility Attributes Name Initial integer(kind=c_int), public :: year integer(kind=c_int), public :: month integer(kind=c_int), public :: day integer(kind=c_int), public :: hour integer(kind=c_int), public :: min real(kind=c_double), public :: sec Functions public function cs (fs) result(fsnull) Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: fs Return Value character(len=:),\n  allocatable","tags":"","loc":"module/excel_mo.html"}]}